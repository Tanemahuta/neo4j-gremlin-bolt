plugins {
    id 'net.ltgt.apt' version '0.15'
    id 'java'
    id 'maven'
    id 'jacoco'
}

group = 'ta.nemahuta.neo4j'
version = '0.3.0'

description = "Tanemahuta's Neo4J Gremlin (Bolt) integration"

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    jcenter()
}

dependencies {
    final lombokVersion = "1.16.20"
    final mockitoVersion = "2.18.3"
    final junitVersion = "5.2.0"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compile(group: 'org.apache.tinkerpop', name: 'gremlin-core', version: '3.3.0') {
        exclude(group: "org.slf4j", module: 'slf4j-log4j12')
    }
    compile group: 'org.neo4j.driver', name: 'neo4j-java-driver', version: '1.4.4'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'com.google.guava', name: 'guava', version: '24.1-jre'

    ["junit-jupiter-api", "junit-jupiter-params"].each {
        testCompile "org.junit.jupiter:${it}:${junitVersion}"
    }
    testCompile 'ch.qos.logback:logback-classic:1.2.3'
    ["mockito-core", "mockito-junit-jupiter"].each {
        testCompile "org.mockito:${it}:${mockitoVersion}"
    }

    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntime 'org.junit.platform:junit-platform-launcher:1.2.0'
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}